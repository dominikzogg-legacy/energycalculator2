[1mdiff --git a/app/Controller/ComestibleController.php b/app/Controller/ComestibleController.php[m
[1mindex b1aea80..ab9c5d1 100644[m
[1m--- a/app/Controller/ComestibleController.php[m
[1m+++ b/app/Controller/ComestibleController.php[m
[36m@@ -102,7 +102,7 @@[m [mfinal class ComestibleController[m
             throw HttpException::create($request, $response, 403, 'comestible.error.permissiondenied');[m
         }[m
 [m
[31m-        $comestibles = $this->comestibleRepository->findBy(['user_id' => $authenticatedUser->getId()]);[m
[32m+[m[32m        $comestibles = $this->comestibleRepository->findBy(['userId' => $authenticatedUser->getId()]);[m
 [m
         return $this->twig->render($response, '@Energycalculator/comestible/list.html.twig',[m
             $this->templateData->aggregate($request, [[m
[1mdiff --git a/app/Model/Comestible.php b/app/Model/Comestible.php[m
[1mindex 47348ba..1527890 100644[m
[1m--- a/app/Model/Comestible.php[m
[1m+++ b/app/Model/Comestible.php[m
[36m@@ -7,6 +7,7 @@[m [muse Chubbyphp\Security\Authorization\OwnedByUserModelInterface;[m
 use Chubbyphp\Validation\Rules\UniqueModelRule;[m
 use Chubbyphp\Validation\ValidatableModelInterface;[m
 use Ramsey\Uuid\Uuid;[m
[32m+[m[32muse Respect\Validation\Rules\FloatVal;[m
 use Respect\Validation\Validator as v;[m
 [m
 final class Comestible implements \JsonSerializable, OwnedByUserModelInterface, ValidatableModelInterface[m
[36m@@ -157,7 +158,7 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
      */[m
     public function getOwnedByUserId(): string[m
     {[m
[31m-        return $this->getUser();[m
[32m+[m[32m        return $this->getUser()->getId();[m
     }[m
 [m
     /**[m
[36m@@ -312,11 +313,11 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
      */[m
     public static function fromRow(array $data): ModelInterface[m
     {[m
[31m-        $comestible = new self($data['id'], new \DateTime($data['created_at']));[m
[32m+[m[32m        $comestible = new self($data['id'], new \DateTime($data['createdAt']));[m
 [m
[31m-        $comestible->updatedAt = null !== $data['updated_at'] ? new \DateTime($data['updated_at']) : null;[m
[32m+[m[32m        $comestible->updatedAt = null !== $data['updatedAt'] ? new \DateTime($data['updatedAt']) : null;[m
         $comestible->userResolver = $data['user_resolver'];[m
[31m-        $comestible->userId = $data['user_id'];[m
[32m+[m[32m        $comestible->userId = $data['userId'];[m
         $comestible->name = $data['name'];[m
         $comestible->calorie = (float) $data['calorie'];[m
         $comestible->protein = (float) $data['protein'];[m
[36m@@ -334,9 +335,9 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
     {[m
         return [[m
             'id' => $this->id,[m
[31m-            'created_at' => $this->createdAt->format('Y-m-d H:i:s'),[m
[31m-            'updated_at' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
[31m-            'user' => null !== $this->user ? $this->user->getId() : null,[m
[32m+[m[32m            'createdAt' => $this->createdAt->format('Y-m-d H:i:s'),[m
[32m+[m[32m            'updatedAt' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
[32m+[m[32m            'userId' => null !== $this->user ? $this->user->getId() : null,[m
             'name' => $this->name,[m
             'calorie' => $this->calorie,[m
             'protein' => $this->protein,[m
[36m@@ -353,15 +354,15 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
     {[m
         return [[m
             'id' => $this->id,[m
[31m-            'created_at' => $this->createdAt->format('Y-m-d H:i:s'),[m
[31m-            'updated_at' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
[32m+[m[32m            'createdAt' => $this->createdAt->format('Y-m-d H:i:s'),[m
[32m+[m[32m            'updatedAt' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
             'user' => null !== $this->user ? $this->user->jsonSerialize() : null,[m
             'name' => $this->name,[m
             'calorie' => $this->calorie,[m
             'protein' => $this->protein,[m
             'carbohydrate' => $this->carbohydrate,[m
             'fat' => $this->fat,[m
[31m-            'default_value' => $this->defaultValue,[m
[32m+[m[32m            'defaultValue' => $this->defaultValue,[m
         ];[m
     }[m
 [m
[36m@@ -370,7 +371,7 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
      */[m
     public function getModelValidator()[m
     {[m
[31m-        return v::create()->addRule(new UniqueModelRule(['user_id', 'name']));[m
[32m+[m[32m        return v::create()->addRule(new UniqueModelRule(['userId', 'name']));[m
     }[m
 [m
     /**[m
[36m@@ -381,11 +382,11 @@[m [mfinal class Comestible implements \JsonSerializable, OwnedByUserModelInterface,[m
         return [[m
             'user' => v::notEmpty(),[m
             'name' => v::notBlank(),[m
[31m-            'calorie' => v::notBlank()->floatVal(),[m
[31m-            'protein' => v::notBlank()->floatVal(),[m
[31m-            'carbohydrate' => v::notBlank()->floatVal(),[m
[31m-            'fat' => v::notBlank()->floatVal(),[m
[31m-            'defaultValue' => v::floatVal(),[m
[32m+[m[32m            'calorie' => v::floatVal(),[m
[32m+[m[32m            'protein' => v::floatVal(),[m
[32m+[m[32m            'carbohydrate' => v::floatVal(),[m
[32m+[m[32m            'fat' => v::floatVal(),[m
[32m+[m[32m            'defaultValue' => v::optional(new FloatVal()),[m
         ];[m
     }[m
 }[m
[1mdiff --git a/app/Model/User.php b/app/Model/User.php[m
[1mindex 28dc353..02302b8 100644[m
[1m--- a/app/Model/User.php[m
[1m+++ b/app/Model/User.php[m
[36m@@ -196,9 +196,9 @@[m [mfinal class User implements \JsonSerializable, UserPasswordInterface, Validatabl[m
      */[m
     public static function fromRow(array $data): ModelInterface[m
     {[m
[31m-        $user = new self($data['id'], new \DateTime($data['created_at']));[m
[32m+[m[32m        $user = new self($data['id'], new \DateTime($data['createdAt']));[m
 [m
[31m-        $user->updatedAt = null !== $data['updated_at'] ? new \DateTime($data['updated_at']) : null;[m
[32m+[m[32m        $user->updatedAt = null !== $data['updatedAt'] ? new \DateTime($data['updatedAt']) : null;[m
         $user->username = $data['username'];[m
         $user->email = $data['email'];[m
         $user->password = $data['password'];[m
[36m@@ -214,8 +214,8 @@[m [mfinal class User implements \JsonSerializable, UserPasswordInterface, Validatabl[m
     {[m
         return [[m
             'id' => $this->id,[m
[31m-            'created_at' => $this->createdAt->format('Y-m-d H:i:s'),[m
[31m-            'updated_at' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
[32m+[m[32m            'createdAt' => $this->createdAt->format('Y-m-d H:i:s'),[m
[32m+[m[32m            'updatedAt' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
             'username' => $this->username,[m
             'email' => $this->email,[m
             'password' => $this->password,[m
[36m@@ -230,8 +230,8 @@[m [mfinal class User implements \JsonSerializable, UserPasswordInterface, Validatabl[m
     {[m
         return [[m
             'id' => $this->id,[m
[31m-            'created_at' => $this->createdAt->format('Y-m-d H:i:s'),[m
[31m-            'updated_at' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
[32m+[m[32m            'createdAt' => $this->createdAt->format('Y-m-d H:i:s'),[m
[32m+[m[32m            'updatedAt' => null !== $this->updatedAt ? $this->updatedAt->format('Y-m-d H:i:s') : null,[m
             'username' => $this->username,[m
             'email' => $this->email,[m
             'roles' => $this->roles,[m
[1mdiff --git a/app/Resources/translations/de.php b/app/Resources/translations/de.php[m
[1mindex 839978a..659b4e2 100644[m
[1m--- a/app/Resources/translations/de.php[m
[1m+++ b/app/Resources/translations/de.php[m
[36m@@ -1,6 +1,33 @@[m
 <?php[m
 [m
 return [[m
[32m+[m[32m    'comestible.action.create' => 'Nahrungsmittel erfassen',[m
[32m+[m[32m    'comestible.action.edit' => 'Nahrungsmittel bearbeiten',[m
[32m+[m[32m    'comestible.action.delete' => 'Nahrungsmittel lÃ¶schen',[m
[32m+[m[32m    'comestible.action.list' => 'zurÃ¼ck zur Nahrungsmittelliste',[m
[32m+[m[32m    'comestible.action.view' => 'Nahrungsmittel anschauen',[m
[32m+[m[32m    'comestible.error.notfound' => 'Nahrungsmittel mit diesem Identifier konnte nicht gefunden werden!',[m
[32m+[m[32m    'comestible.error.permissiondenied' => 'Diese Nahrungsmittel Aktion kann aus mangelnden Rechten nicht durchgefÃ¼hrt werden!',[m
[32m+[m[32m    'comestible.flash.create.failed' => 'Nahrungsmittel konnte nicht erfasst werden!',[m
[32m+[m[32m    'comestible.flash.create.success' => 'Nahrungsmittel erfolgreich erfasst.',[m
[32m+[m[32m    'comestible.flash.edit.failed' => 'Nahrungsmittel konnte nicht aktualisiert werden!',[m
[32m+[m[32m    'comestible.flash.edit.success' => 'Nahrungsmittel erfolgreiche aktualisiert.',[m
[32m+[m[32m    'comestible.label.actions' => 'Aktionen',[m
[32m+[m[32m    'comestible.label.calorie' => 'Kalorien',[m
[32m+[m[32m    'comestible.label.carbohydrate' => 'Kohlenhydrat',[m
[32m+[m[32m    'comestible.label.createdAt' => 'Erfasst am',[m
[32m+[m[32m    'comestible.label.defaultValue' => 'PortionsgrÃ¶sse',[m
[32m+[m[32m    'comestible.label.fat' => 'Fett',[m
[32m+[m[32m    'comestible.label.name' => 'Name',[m
[32m+[m[32m    'comestible.label.id' => 'Id',[m
[32m+[m[32m    'comestible.label.protein' => 'Eiweiss',[m
[32m+[m[32m    'comestible.label.save' => 'Speichern',[m
[32m+[m[32m    'comestible.label.updatedAt' => 'Aktualisiert am',[m
[32m+[m[32m    'comestible.label.user' => 'Benutzer',[m
[32m+[m[32m    'comestible.title.create' => 'Nahrungsmittel erfassen',[m
[32m+[m[32m    'comestible.title.edit' => 'Nahrungsmittel bearbeiten',[m
[32m+[m[32m    'comestible.title.list' => 'Nahrungsmittelliste',[m
[32m+[m[32m    'comestible.title.view' => 'Nahrungsmittel anschauen',[m
     'error.401.title' => 'Nicht authorisiert',[m
     'error.401.text' => 'Bitte melden Sie sich mit Ihren Benutzerdaten an.',[m
     'error.403.title' => 'Verboten',[m
[36m@@ -16,9 +43,10 @@[m [mreturn [[m
     'login.flash.invalidcredentials' => 'Unbekannte E-Mail oder falsches Passwort!',[m
     'login.label.email' => 'E-Mail',[m
     'login.label.password' => 'Passwort',[m
[32m+[m[32m    'nav.comestibles' => 'Nahrungsmittel',[m
     'nav.users' => 'Benutzer',[m
[31m-    'project.title' => 'Slim Skeleton',[m
[31m-    'user.action.create' => 'Benutzer erstellen',[m
[32m+[m[32m    'project.title' => 'Energycalculator',[m
[32m+[m[32m    'user.action.create' => 'Benutzer erfassen',[m
     'user.action.edit' => 'Benutzer bearbeiten',[m
     'user.action.delete' => 'Benutzer lÃ¶schen',[m
     'user.action.list' => 'zurÃ¼ck zur Benutzerliste',[m
[36m@@ -26,12 +54,12 @@[m [mreturn [[m
     'user.error.cantdeleteyourself' => 'Es ist nicht erlaubt seinen eigenen Benutzer zu lÃ¶schen!',[m
     'user.error.notfound' => 'Benutzer mit diesem Identifier konnte nicht gefunden werden!',[m
     'user.error.permissiondenied' => 'Diese Benutzer Aktion kann aus mangelnden Rechten nicht durchgefÃ¼hrt werden!',[m
[31m-    'user.flash.create.failed' => 'Benutzer konnte nicht erstellt werden!',[m
[31m-    'user.flash.create.success' => 'Benutzer erfolgreich erstellt.',[m
[32m+[m[32m    'user.flash.create.failed' => 'Benutzer konnte nicht erfasst werden!',[m
[32m+[m[32m    'user.flash.create.success' => 'Benutzer erfolgreich erfasst.',[m
     'user.flash.edit.failed' => 'Benutzer konnte nicht aktualisiert werden!',[m
     'user.flash.edit.success' => 'Benutzer erfolgreiche aktualisiert.',[m
     'user.label.actions' => 'Aktionen',[m
[31m-    'user.label.created_at' => 'Erstellt am',[m
[32m+[m[32m    'user.label.createdAt' => 'Erfasst am',[m
     'user.label.email' => 'E-Mail',[m
     'user.label.id' => 'Id',[m
     'user.label.password' => 'Passwort',[m
[36m@@ -39,9 +67,9 @@[m [mreturn [[m
     'user.label.roles.ADMIN' => 'Administrator',[m
     'user.label.roles.USER' => 'Benutzer',[m
     'user.label.save' => 'Speichern',[m
[31m-    'user.label.updated_at' => 'Aktualisiert am',[m
[32m+[m[32m    'user.label.updatedAt' => 'Aktualisiert am',[m
     'user.label.username' => 'Benutzername',[m
[31m-    'user.title.create' => 'Benutzer erstellen',[m
[32m+[m[32m    'user.title.create' => 'Benutzer erfassen',[m
     'user.title.edit' => 'Benutzer bearbeiten',[m
     'user.title.list' => 'Benutzerliste',[m
     'user.title.view' => 'Benutzer anschauen',[m
[1mdiff --git a/app/Resources/translations/en.php b/app/Resources/translations/en.php[m
[1mindex 0f9e665..04a9061 100644[m
[1m--- a/app/Resources/translations/en.php[m
[1m+++ b/app/Resources/translations/en.php[m
[36m@@ -1,6 +1,33 @@[m
 <?php[m
 [m
 return [[m
[32m+[m[32m    'comestible.action.create' => 'Create comestible',[m
[32m+[m[32m    'comestible.action.edit' => 'Edit comestible',[m
[32m+[m[32m    'comestible.action.delete' => 'Delete comestible',[m
[32m+[m[32m    'comestible.action.list' => 'back to comestiblelist',[m
[32m+[m[32m    'comestible.action.view' => 'View comestible',[m
[32m+[m[32m    'comestible.error.notfound' => 'User with this identifier could not be found!',[m
[32m+[m[32m    'comestible.error.permissiondenied' => 'This comestible action could not be accomplished cause missing permissions!',[m
[32m+[m[32m    'comestible.flash.create.failed' => 'Could not create comestible!',[m
[32m+[m[32m    'comestible.flash.create.success' => 'Comestible successfully created.',[m
[32m+[m[32m    'comestible.flash.edit.failed' => 'Could not update comestible!',[m
[32m+[m[32m    'comestible.flash.edit.success' => 'Comestible successfully updated.',[m
[32m+[m[32m    'comestible.label.actions' => 'Actions',[m
[32m+[m[32m    'comestible.label.calorie' => 'Calorie',[m
[32m+[m[32m    'comestible.label.carbohydrate' => 'Carbohydrate',[m
[32m+[m[32m    'comestible.label.createdAt' => 'Created at',[m
[32m+[m[32m    'comestible.label.defaultValue' => 'Portion size',[m
[32m+[m[32m    'comestible.label.fat' => 'Fat',[m
[32m+[m[32m    'comestible.label.id' => 'Id',[m
[32m+[m[32m    'comestible.label.name' => 'Name',[m
[32m+[m[32m    'comestible.label.protein' => 'Protein',[m
[32m+[m[32m    'comestible.label.save' => 'Save',[m
[32m+[m[32m    'comestible.label.updatedAt' => 'Updated at',[m
[32m+[m[32m    'comestible.label.user' => 'User',[m
[32m+[m[32m    'comestible.title.create' => 'Create comestible',[m
[32m+[m[32m    'comestible.title.edit' => 'Edit comestible',[m
[32m+[m[32m    'comestible.title.list' => 'Comestiblelist',[m
[32m+[m[32m    'comestible.title.view' => 'View comestible',[m
     'error.401.title' => 'Unauthorized',[m
     'error.401.text' => 'Please logging in with your credentials.',[m
     'error.403.title' => 'Forbidden',[m
[36m@@ -16,8 +43,9 @@[m [mreturn [[m
     'login.flash.invalidcredentials' => 'Unknown email or wrong password!',[m
     'login.label.email' => 'E-Mail',[m
     'login.label.password' => 'Password',[m
[32m+[m[32m    'nav.comestibles' => 'Comestibles',[m
     'nav.users' => 'User',[m
[31m-    'project.title' => 'Slim Skeleton',[m
[32m+[m[32m    'project.title' => 'Energycalulator',[m
     'user.action.create' => 'Create user',[m
     'user.action.edit' => 'Edit user',[m
     'user.action.delete' => 'Delete user',[m
[36m@@ -31,14 +59,14 @@[m [mreturn [[m
     'user.flash.edit.failed' => 'Could not update user!',[m
     'user.flash.edit.success' => 'User successfully updated.',[m
     'user.label.actions' => 'Actions',[m
[31m-    'user.label.created_at' => 'Created at',[m
[32m+[m[32m    'user.label.createdAt' => 'Created at',[m
     'user.label.email' => 'E-Mail',[m
     'user.label.id' => 'Id',[m
     'user.label.password' => 'Password',[m
     'user.label.roles' => 'Roles',[m
     'user.label.roles.ADMIN' => 'Administrator',[m
     'user.label.roles.USER' => 'User',[m
[31m-    'user.label.updated_at' => 'Updated at',[m
[32m+[m[32m    'user.label.updatedAt' => 'Updated at',[m
     'user.label.save' => 'Save',[m
     'user.label.username' => 'Username',[m
     'user.title.create' => 'Create user',[m
[1mdiff --git a/app/Resources/views/comestible/view.html.twig b/app/Resources/views/comestible/view.html.twig[m
[1mindex e5c91f8..30c47b5 100644[m
[1m--- a/app/Resources/views/comestible/view.html.twig[m
[1m+++ b/app/Resources/views/comestible/view.html.twig[m
[36m@@ -8,7 +8,7 @@[m
                 {% for property, value in comestible %}[m
                     <tr>[m
                         <td>{{ ("comestible.label."~property)|translate(locale) }}</td>[m
[31m-                        <td>{% if value is iterable %}{% for subvalue in value %}{{ subvalue }}{% if not loop.last %}, {% endif %}{% endfor %}{% else %}{{ value }}{% endif %}</td>[m
[32m+[m[32m                        <td>{% if value is iterable %}{% for subvalue in value %}{% if subvalue is not iterable %}{{ subvalue }}{% else %}{% endif %}{% if not loop.last %}, {% endif %}{% endfor %}{% else %}{{ value }}{% endif %}</td>[m
                     </tr>[m
                 {% endfor %}[m
             </table>[m
[1mdiff --git a/app/schema.php b/app/schema.php[m
[1mindex 7e4d674..2b79fe2 100644[m
[1m--- a/app/schema.php[m
[1m+++ b/app/schema.php[m
[36m@@ -6,8 +6,8 @@[m [m$schema = new Schema();[m
 [m
 $users = $schema->createTable('users');[m
 $users->addColumn('id', 'guid');[m
[31m-$users->addColumn('created_at', 'datetime');[m
[31m-$users->addColumn('updated_at', 'datetime', ['notnull' => false]);[m
[32m+[m[32m$users->addColumn('createdAt', 'datetime');[m
[32m+[m[32m$users->addColumn('updatedAt', 'datetime', ['notnull' => false]);[m
 $users->addColumn('email', 'string');[m
 $users->addColumn('username', 'string');[m
 $users->addColumn('password', 'string');[m
[36m@@ -18,9 +18,9 @@[m [m$users->addUniqueIndex(['username']);[m
 [m
 $comestibles = $schema->createTable('comestibles');[m
 $comestibles->addColumn('id', 'guid');[m
[31m-$comestibles->addColumn('created_at', 'datetime');[m
[31m-$comestibles->addColumn('updated_at', 'datetime', ['notnull' => false]);[m
[31m-$comestibles->addColumn('user_id', 'string');[m
[32m+[m[32m$comestibles->addColumn('createdAt', 'datetime');[m
[32m+[m[32m$comestibles->addColumn('updatedAt', 'datetime', ['notnull' => false]);[m
[32m+[m[32m$comestibles->addColumn('userId', 'string');[m
 $comestibles->addColumn('name', 'string');[m
 $comestibles->addColumn('calorie', 'decimal', ['precision' => 10, 'scale' => 4]);[m
 $comestibles->addColumn('protein', 'decimal', ['precision' => 10, 'scale' => 4]);[m
[36m@@ -28,7 +28,7 @@[m [m$comestibles->addColumn('carbohydrate', 'decimal', ['precision' => 10, 'scale' =[m
 $comestibles->addColumn('fat', 'decimal', ['precision' => 10, 'scale' => 4]);[m
 $comestibles->addColumn('default_value', 'decimal', ['precision' => 10, 'scale' => 4, 'notnull' => false]);[m
 $comestibles->setPrimaryKey(['id']);[m
[31m-$comestibles->addUniqueIndex(['user_id', 'name']);[m
[31m-$comestibles->addForeignKeyConstraint($users, ['user_id'], ['id'], ['onDelete' => 'CASCADE']);[m
[32m+[m[32m$comestibles->addUniqueIndex(['userId', 'name']);[m
[32m+[m[32m$comestibles->addForeignKeyConstraint($users, ['userId'], ['id'], ['onDelete' => 'CASCADE']);[m
 [m
 return $schema;[m
[1mdiff --git a/app/services.php b/app/services.php[m
[1mindex 2cd622a..58a2f9c 100644[m
[1m--- a/app/services.php[m
[1m+++ b/app/services.php[m
[36m@@ -64,6 +64,20 @@[m [m$container->extend('security.authorization.authorizations', function (array $aut[m
     return $authorizations;[m
 });[m
 [m
[32m+[m
[32m+[m[32m$container->extend('security.authorization.rolehierarchy', function (array $rolehierarchy) use ($container) {[m
[32m+[m[32m    $rolehierarchy['ADMIN'] = ['USER'];[m
[32m+[m[32m    $rolehierarchy['USER'] = [[m
[32m+[m[32m        'COMESTIBLE_LIST',[m
[32m+[m[32m        'COMESTIBLE_VIEW',[m
[32m+[m[32m        'COMESTIBLE_CREATE',[m
[32m+[m[32m        'COMESTIBLE_EDIT',[m
[32m+[m[32m        'COMESTIBLE_DELETE'[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    return $rolehierarchy;[m
[32m+[m[32m});[m
[32m+[m
 $container->extend('translator.providers', function (array $providers) use ($container) {[m
     $translationDir = $container['appDir'].'/Resources/translations';[m
     $providers[] = new LocaleTranslationProvider('de', require $translationDir.'/de.php');[m
[36m@@ -225,6 +239,11 @@[m [m$container[TemplateData::class] = function () use ($container) {[m
         $container['debug'],[m
         $container['session'],[m
         [[m
[32m+[m[32m            'comestible_create' => ['comestible_list'],[m
[32m+[m[32m            'comestible_delete' => ['comestible_list'],[m
[32m+[m[32m            'comestible_edit' => ['comestible_list'],[m
[32m+[m[32m            'comestible_list' => [],[m
[32m+[m[32m            'comestible_view' => ['comestible_list'],[m
             'user_create' => ['user_list'],[m
             'user_delete' => ['user_list'],[m
             'user_edit' => ['user_list'],[m
[1mdiff --git a/config/config.php b/config/config.php[m
[1mindex a208b85..e941501 100644[m
[1m--- a/config/config.php[m
[1m+++ b/config/config.php[m
[36m@@ -28,7 +28,7 @@[m [mreturn [[m
         'monolog.level' => 'notice',[m
         'security.authorization.rolehierarchy' => [[m
             'ADMIN' => ['USER'],[m
[31m-            'USER' => ['COMESTIBLE_LIST', 'COMESTIBLE_VIEW', 'COMESTIBLE_CREATE', 'COMESTIBLE_EDIT'],[m
[32m+[m[32m            'USER' => ['COMESTIBLE_LIST', 'COMESTIBLE_VIEW', 'COMESTIBLE_CREATE', 'COMESTIBLE_EDIT', 'COMESTIBLE_DELETE'],[m
         ],[m
         'session.expirationTime' => 1200,[m
         'session.privateRsaKey' => '6t332+EAscTgRQstgHjUOYvTeTbhk7CaW9AptDT9Fhw=', //Â https://github.com/AndrewCarterUK/CryptoKey[m
